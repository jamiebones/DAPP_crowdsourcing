/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CrowdSourcingFactory,
  CrowdSourcingFactoryInterface,
} from "../CrowdSourcingFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allCrowdSource",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_purpose",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_targetamount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_deployer",
        type: "address",
      },
    ],
    name: "createCrowdSourceContract",
    outputs: [
      {
        internalType: "address",
        name: "crowdContract",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_purpose",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "getCrowdSource",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberofCloneMade",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620010f7380380620010f7833981810160405281019062000037919062000182565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001fc565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200017c81620001e2565b92915050565b6000602082840312156200019557600080fd5b6000620001a5848285016200016b565b91505092915050565b6000620001bb82620001c2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001ed81620001ae565b8114620001f957600080fd5b50565b610eeb806200020c6000396000f3fe60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b1461012a578063dae6239d14610155578063e32effaf14610185578063f2fde38b146101c25761007b565b806334ea1016146100805780633c371e93146100ab5780635c60da1b146100e8578063715018a614610113575b600080fd5b34801561008c57600080fd5b506100956101eb565b6040516100a29190610c2c565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd91906109d7565b6101f8565b6040516100df9190610b53565b60405180910390f35b3480156100f457600080fd5b506100fd610237565b60405161010a9190610b53565b60405180910390f35b34801561011f57600080fd5b5061012861025d565b005b34801561013657600080fd5b5061013f6102e5565b60405161014c9190610b53565b60405180910390f35b61016f600480360381019061016a9190610970565b61030e565b60405161017c9190610b53565b60405180910390f35b34801561019157600080fd5b506101ac60048036038101906101a7919061091c565b610547565b6040516101b99190610b53565b60405180910390f35b3480156101ce57600080fd5b506101e960048036038101906101e491906108f3565b610593565b005b6000600280549050905090565b6002818154811061020857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61026561068b565b73ffffffffffffffffffffffffffffffffffffffff166102836102e5565b73ffffffffffffffffffffffffffffffffffffffff16146102d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d090610c0c565b60405180910390fd5b6102e36000610693565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008061031b8585610757565b9050600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b690610bcc565b60405180910390fd5b600085856040516020016103d4929190610b2b565b604051602081830303815290604052805190602001209050610418600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168261078a565b92508273ffffffffffffffffffffffffffffffffffffffff16634f3bddeb8787876040518463ffffffff1660e01b815260040161045793929190610b6e565b600060405180830381600087803b15801561047157600080fd5b505af1158015610485573d6000803e3d6000fd5b505050506002839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050509392505050565b6000806105548484610757565b90506003600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505092915050565b61059b61068b565b73ffffffffffffffffffffffffffffffffffffffff166105b96102e5565b73ffffffffffffffffffffffffffffffffffffffff161461060f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060690610c0c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561067f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067690610bac565b60405180910390fd5b61068881610693565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000828260405160200161076c929190610b2b565b60405160208183030381529060405280519060200120905092915050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528360601b60148201527f5af43d82803e903d91602b57fd5bf300000000000000000000000000000000006028820152826037826000f5915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561085b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085290610bec565b60405180910390fd5b92915050565b600061087461086f84610c6c565b610c47565b90508281526020810184848401111561088c57600080fd5b610897848285610d00565b509392505050565b6000813590506108ae81610e87565b92915050565b600082601f8301126108c557600080fd5b81356108d5848260208601610861565b91505092915050565b6000813590506108ed81610e9e565b92915050565b60006020828403121561090557600080fd5b60006109138482850161089f565b91505092915050565b6000806040838503121561092f57600080fd5b600083013567ffffffffffffffff81111561094957600080fd5b610955858286016108b4565b9250506020610966858286016108de565b9150509250929050565b60008060006060848603121561098557600080fd5b600084013567ffffffffffffffff81111561099f57600080fd5b6109ab868287016108b4565b93505060206109bc868287016108de565b92505060406109cd8682870161089f565b9150509250925092565b6000602082840312156109e957600080fd5b60006109f7848285016108de565b91505092915050565b610a0981610cc4565b82525050565b6000610a1a82610c9d565b610a248185610ca8565b9350610a34818560208601610d0f565b610a3d81610dac565b840191505092915050565b6000610a5382610c9d565b610a5d8185610cb9565b9350610a6d818560208601610d0f565b80840191505092915050565b6000610a86602683610ca8565b9150610a9182610dbd565b604082019050919050565b6000610aa9601983610ca8565b9150610ab482610e0c565b602082019050919050565b6000610acc601783610ca8565b9150610ad782610e35565b602082019050919050565b6000610aef602083610ca8565b9150610afa82610e5e565b602082019050919050565b610b0e81610cf6565b82525050565b610b25610b2082610cf6565b610d73565b82525050565b6000610b378285610a48565b9150610b438284610b14565b6020820191508190509392505050565b6000602082019050610b686000830184610a00565b92915050565b60006060820190508181036000830152610b888186610a0f565b9050610b976020830185610b05565b610ba46040830184610a00565b949350505050565b60006020820190508181036000830152610bc581610a79565b9050919050565b60006020820190508181036000830152610be581610a9c565b9050919050565b60006020820190508181036000830152610c0581610abf565b9050919050565b60006020820190508181036000830152610c2581610ae2565b9050919050565b6000602082019050610c416000830184610b05565b92915050565b6000610c51610c62565b9050610c5d8282610d42565b919050565b6000604051905090565b600067ffffffffffffffff821115610c8757610c86610d7d565b5b610c9082610dac565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610ccf82610cd6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610d2d578082015181840152602081019050610d12565b83811115610d3c576000848401525b50505050565b610d4b82610dac565b810181811067ffffffffffffffff82111715610d6a57610d69610d7d565b5b80604052505050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f43726f776420736f757263696e67207479706520657869737400000000000000600082015250565b7f455243313136373a2063726561746532206661696c6564000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610e9081610cc4565b8114610e9b57600080fd5b50565b610ea781610cf6565b8114610eb257600080fd5b5056fea2646970667358221220997a164cf53c004a03b7f0a6848531b0c44cfec6d5747218d9beda8aed0ba17d64736f6c63430008040033";

type CrowdSourcingFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrowdSourcingFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrowdSourcingFactory__factory extends ContractFactory {
  constructor(...args: CrowdSourcingFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CrowdSourcingFactory";
  }

  deploy(
    _implementation: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CrowdSourcingFactory> {
    return super.deploy(
      _implementation,
      overrides || {}
    ) as Promise<CrowdSourcingFactory>;
  }
  getDeployTransaction(
    _implementation: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_implementation, overrides || {});
  }
  attach(address: string): CrowdSourcingFactory {
    return super.attach(address) as CrowdSourcingFactory;
  }
  connect(signer: Signer): CrowdSourcingFactory__factory {
    return super.connect(signer) as CrowdSourcingFactory__factory;
  }
  static readonly contractName: "CrowdSourcingFactory";
  public readonly contractName: "CrowdSourcingFactory";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrowdSourcingFactoryInterface {
    return new utils.Interface(_abi) as CrowdSourcingFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrowdSourcingFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CrowdSourcingFactory;
  }
}
