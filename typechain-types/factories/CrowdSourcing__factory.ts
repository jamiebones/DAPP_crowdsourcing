/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CrowdSourcing, CrowdSourcingInterface } from "../CrowdSourcing";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "donorAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "string",
        name: "crowdsource",
        type: "string",
      },
    ],
    name: "DonationMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "string",
        name: "crowdsource",
        type: "string",
      },
    ],
    name: "DonationWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "amountDonated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "campaignRunning",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "donateToCause",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "donors",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "donorsAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDonorsList",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "donorsAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct CrowdSourcing.DonorsAmount[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_purpose",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_targetamount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_deployer",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "purpose",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "targetAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrwaDonation",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6119fa8061010d6000396000f3fe6080604052600436106100dd5760003560e01c8063953b8fb81161007f578063ca0cdea811610059578063ca0cdea81461024a578063cfc2df1c14610287578063d5f39488146102b2578063f2fde38b146102dd576100dd565b8063953b8fb8146101ea578063c20abe7014610215578063c41bed8a1461021f576100dd565b80636c6649b2116100bb5780636c6649b21461014057806370740aab1461017d578063715018a6146101a85780638da5cb5b146101bf576100dd565b80634f3bddeb146100e257806350511f871461010b57806364cd811f14610136575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190611011565b610306565b005b34801561011757600080fd5b5061012061046a565b60405161012d9190611393565b60405180910390f35b61013e610639565b005b34801561014c57600080fd5b5061016760048036038101906101629190611078565b610831565b6040516101749190611378565b60405180910390f35b34801561018957600080fd5b50610192610870565b60405161019f91906113d0565b60405180910390f35b3480156101b457600080fd5b506101bd6108fe565b005b3480156101cb57600080fd5b506101d4610986565b6040516101e19190611378565b60405180910390f35b3480156101f657600080fd5b506101ff6109af565b60405161020c91906114f2565b60405180910390f35b61021d6109b5565b005b34801561022b57600080fd5b50610234610c44565b60405161024191906114f2565b60405180910390f35b34801561025657600080fd5b50610271600480360381019061026c9190610fe8565b610c4a565b60405161027e91906114f2565b60405180910390f35b34801561029357600080fd5b5061029c610c62565b6040516102a991906113b5565b60405180910390f35b3480156102be57600080fd5b506102c7610c75565b6040516102d49190611378565b60405180910390f35b3480156102e957600080fd5b5061030460048036038101906102ff9190610fe8565b610c9b565b005b600060159054906101000a900460ff1661033057600060149054906101000a900460ff1615610339565b610338610d93565b5b610378576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036f90611452565b60405180910390fd5b60008060159054906101000a900460ff1615905080156103c9576001600060156101000a81548160ff0219169083151502179055506001600060146101000a81548160ff0219169083151502179055505b83600190805190602001906103df929190610e83565b50826002819055506001600660146101000a81548160ff02191690831515021790555081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156104645760008060156101000a81548160ff0219169083151502179055505b50505050565b60606000600580549050905060008167ffffffffffffffff8111156104b8577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156104f157816020015b6104de610f09565b8152602001906001900390816104d65790505b50905060005b828110156106305760006005828154811061053b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060405180604001604052808373ffffffffffffffffffffffffffffffffffffffff16815260200182815250848481518110610610577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250505080806106289061171b565b9150506104f7565b50809250505090565b60011515600660149054906101000a900460ff1615151461068f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610686906114b2565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461071f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071690611432565b60405180910390fd5b600060035411610764576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075b906113f2565b60405180910390fd5b6000600660146101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f193505050501580156107c7573d6000803e3d6000fd5b5060016040516107d79190611361565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167f2b3030fd9af13b0522fa0c5741a90b591527a70dc6fe726bc48c6e0cf7df0b4060035460405161082791906114f2565b60405180910390a3565b6005818154811061084157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001805461087d906116b8565b80601f01602080910402602001604051908101604052809291908181526020018280546108a9906116b8565b80156108f65780601f106108cb576101008083540402835291602001916108f6565b820191906000526020600020905b8154815290600101906020018083116108d957829003601f168201915b505050505081565b610906610da4565b73ffffffffffffffffffffffffffffffffffffffff16610924610986565b73ffffffffffffffffffffffffffffffffffffffff161461097a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097190611492565b60405180910390fd5b6109846000610dac565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b60011515600660149054906101000a900460ff16151514610a0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a02906114b2565b60405180910390fd5b60003411610a4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4590611472565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610abd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab4906114d2565b60405180910390fd5b3460036000828254610acf91906115d8565b92505081905550600080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415905034600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b6c91906115d8565b9250508190555080610bdc576005339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6001604051610beb9190611361565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167f8055909329a96ddf80fb18dde60b1b90058da99c270e0d0960a6633e8313ac2934604051610c3991906114f2565b60405180910390a350565b60035481565b60046020528060005260406000206000915090505481565b600660149054906101000a900460ff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610ca3610da4565b73ffffffffffffffffffffffffffffffffffffffff16610cc1610986565b73ffffffffffffffffffffffffffffffffffffffff1614610d17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0e90611492565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7e90611412565b60405180910390fd5b610d9081610dac565b50565b6000610d9e30610e70565b15905090565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080823b905060008111915050919050565b828054610e8f906116b8565b90600052602060002090601f016020900481019282610eb15760008555610ef8565b82601f10610eca57805160ff1916838001178555610ef8565b82800160010185558215610ef8579182015b82811115610ef7578251825591602001919060010190610edc565b5b509050610f059190610f39565b5090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b5b80821115610f52576000816000905550600101610f3a565b5090565b6000610f69610f6484611532565b61150d565b905082815260208101848484011115610f8157600080fd5b610f8c848285611676565b509392505050565b600081359050610fa381611996565b92915050565b600082601f830112610fba57600080fd5b8135610fca848260208601610f56565b91505092915050565b600081359050610fe2816119ad565b92915050565b600060208284031215610ffa57600080fd5b600061100884828501610f94565b91505092915050565b60008060006060848603121561102657600080fd5b600084013567ffffffffffffffff81111561104057600080fd5b61104c86828701610fa9565b935050602061105d86828701610fd3565b925050604061106e86828701610f94565b9150509250925092565b60006020828403121561108a57600080fd5b600061109884828501610fd3565b91505092915050565b60006110ad8383611314565b60408301905092915050565b6110c28161162e565b82525050565b6110d18161162e565b82525050565b60006110e282611588565b6110ec81856115ab565b93506110f783611563565b8060005b8381101561112857815161110f88826110a1565b975061111a8361159e565b9250506001810190506110fb565b5085935050505092915050565b61113e81611640565b82525050565b600061114f82611593565b61115981856115bc565b9350611169818560208601611685565b611172816117f1565b840191505092915050565b6000815461118a816116b8565b61119481866115cd565b945060018216600081146111af57600181146111c0576111f3565b60ff198316865281860193506111f3565b6111c985611573565b60005b838110156111eb578154818901526001820191506020810190506111cc565b838801955050505b50505092915050565b60006112096013836115bc565b915061121482611802565b602082019050919050565b600061122c6026836115bc565b91506112378261182b565b604082019050919050565b600061124f6013836115bc565b915061125a8261187a565b602082019050919050565b6000611272602e836115bc565b915061127d826118a3565b604082019050919050565b60006112956018836115bc565b91506112a0826118f2565b602082019050919050565b60006112b86020836115bc565b91506112c38261191b565b602082019050919050565b60006112db6017836115bc565b91506112e682611944565b602082019050919050565b60006112fe601d836115bc565b91506113098261196d565b602082019050919050565b60408201600082015161132a60008501826110b9565b50602082015161133d6020850182611343565b50505050565b61134c8161166c565b82525050565b61135b8161166c565b82525050565b600061136d828461117d565b915081905092915050565b600060208201905061138d60008301846110c8565b92915050565b600060208201905081810360008301526113ad81846110d7565b905092915050565b60006020820190506113ca6000830184611135565b92915050565b600060208201905081810360008301526113ea8184611144565b905092915050565b6000602082019050818103600083015261140b816111fc565b9050919050565b6000602082019050818103600083015261142b8161121f565b9050919050565b6000602082019050818103600083015261144b81611242565b9050919050565b6000602082019050818103600083015261146b81611265565b9050919050565b6000602082019050818103600083015261148b81611288565b9050919050565b600060208201905081810360008301526114ab816112ab565b9050919050565b600060208201905081810360008301526114cb816112ce565b9050919050565b600060208201905081810360008301526114eb816112f1565b9050919050565b60006020820190506115076000830184611352565b92915050565b6000611517611528565b905061152382826116ea565b919050565b6000604051905090565b600067ffffffffffffffff82111561154d5761154c6117c2565b5b611556826117f1565b9050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006115e38261166c565b91506115ee8361166c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561162357611622611764565b5b828201905092915050565b60006116398261164c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156116a3578082015181840152602081019050611688565b838111156116b2576000848401525b50505050565b600060028204905060018216806116d057607f821691505b602082108114156116e4576116e3611793565b5b50919050565b6116f3826117f1565b810181811067ffffffffffffffff82111715611712576117116117c2565b5b80604052505050565b60006117268261166c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561175957611758611764565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4e6f7468696e6720746f20776974686472617700000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f63616c6c6572206e6f74206465706c6f79657200000000000000000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f646f6e6174696f6e206f662030206574686572206d6164650000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f43616d706169676e206973206e6f742072756e6e696e67000000000000000000600082015250565b7f636f6e74726163742063616e6e6f74206d616b6520646f6e6174696f6e000000600082015250565b61199f8161162e565b81146119aa57600080fd5b50565b6119b68161166c565b81146119c157600080fd5b5056fea26469706673582212202b2dd1890647cef25385e9848a14efd4f3812a4adc5b0c03fcf8b902b146606464736f6c63430008040033";

type CrowdSourcingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrowdSourcingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrowdSourcing__factory extends ContractFactory {
  constructor(...args: CrowdSourcingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CrowdSourcing";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CrowdSourcing> {
    return super.deploy(overrides || {}) as Promise<CrowdSourcing>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CrowdSourcing {
    return super.attach(address) as CrowdSourcing;
  }
  connect(signer: Signer): CrowdSourcing__factory {
    return super.connect(signer) as CrowdSourcing__factory;
  }
  static readonly contractName: "CrowdSourcing";
  public readonly contractName: "CrowdSourcing";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrowdSourcingInterface {
    return new utils.Interface(_abi) as CrowdSourcingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrowdSourcing {
    return new Contract(address, _abi, signerOrProvider) as CrowdSourcing;
  }
}
